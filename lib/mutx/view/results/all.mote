<?
  key = args[:query_string].keyword if (args[:query_string].keyword and !args[:query_string].keyword.empty?)
  status = args[:query_string].status if (args[:query_string].status and !args[:query_string].status.empty?)


  results = Mutx::API::Results.show()
  results_list = results["results"]
  if key
    keyword = key.downcase
    results_list.select! do |result_data|
      result_data["execution_name"].downcase.include? keyword or
      result_data["summary"].downcase.include? keyword or
      result_data["task"].inspect.downcase.include? keyword or
      result_data["command"].downcase.include? keyword or
      result_data["execution_data"].inspect.downcase.include? keyword or
      result_data["custom_params"].inspect.downcase.include? keyword
    end

    results_list.select!{|result_data| result_data["_id"]==key} if key.is_a? Fixnum

  end

  if status
    results_list.select! do |res|
      by_status = res["status"].downcase==status.downcase
      by_first_part_summary = res["summary"].split("step").first.downcase.include? status.downcase
      first_part = res["summary"].split("step").first
      if first_part
        scenarios = first_part.scan(/\(\d.+\)/).first
        if scenarios
          by_partial_summary = scenarios.scan(/[a-z]+/).first == status
        end
      end
      by_status or (by_first_part_summary and by_partial_summary)
    end
  end

  results_size_text = if (key or status)
    "#{results_list.size} result#{'s' if results_list.size>1} found"
  else
    total_of_results = results_list.size
    results_list = results_list[0..19] if total_of_results > 20
    "Showing #{results_list.size} results of #{total_of_results}."
  end


?>

<div class='well'>
  <form name='search' method='get' action='/results/all'>
    <input type='text' name='keyword' title='' placeholder='Search' value='{{key}}' style='height: 34px; padding: 6px 12px; font-size: 14px; line-height: 1.42857143; color: #555; background-color: #fff; background-image: none; border: 1px solid #ccc; border-radius: 4px;' />
    <select id='status' name='status' style='height: 34px; padding: 6px 12px; font-size: 14px; line-height: 1.42857143; color: #555; background-color: #fff; background-image: none; border: 1px solid #ccc; border-radius: 4px;'>
      <option value='' {{'selected' if status.nil?}}>Any status</option>
      <option value='passed' {{'selected' if status=='passed'}}>Passed</option>
      <option value='failed' {{'selected' if status=='failed'}}>Failed</option>
      <option value='stopped' {{'selected' if status=='stopped'}}>Stopped</option>
    </select>
    <input type='submit' class='btn btn-success' value='Search'>&nbsp;&nbsp;
  % if key or status
    <a class='btn btn-danger' href='/results/all' role='button'>Clear</a>
  % end

% if results_list.size > 0
  <div class='btn-group pull-right' role='group'>
    <button type='button' class='btn btn-default' aria-label='Left Align' title='Toggle collapse' onclick="autoCollapse()" title='collapse all panels'>
      <div id='collapse_icon'>
        <span class='glyphicon glyphicon-minus' aria-hidden='true' style='font-size:18px;'></span>
      </div>
    </button>
  </div>
% end
  </form>

  <br>
  <p style='text-align:right'>{{results_size_text}}</p>
</div>

% if results_list.size > 0
  % result_info = Mote.parse(File.read("#{Mutx::View.path}/results/detailed_info.mote"), self, [:result])
  % results_list.each do |result_data|
    {{result_info.call(result:result_data)}}
  % end
% end